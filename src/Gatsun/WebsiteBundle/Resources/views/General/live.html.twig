{% extends "::base.html.twig" %}
{% block title %}Live &ndash; {{ parent() }}{% endblock %}
{% block body %}
    <section>
        <h1>Live</h1>

        <div class="card-panel">
            <div id="imagePlayer" class="live left">
                <img class="media-object"
                     src="{{ asset('images/header.png') }}"/>
            </div>
            <div class="live media-body">
                <p id="infosPlayer">
                    <strong>Chargement en cours&hellip;</strong><br/>
                    <em>Merci de patienter.</em>
                </p>

                <p id="lecteur">
                    <!-- TODO: Réactiver l'autoplay autoplay="autoplay" -->
                    <audio controls="controls">
                        <source src="http://gatsun-server.insa-lyon.fr/live_proxy" type="audio/mpeg"/>
                        <embed height="34" width="530" src="http://gatsun-server.insa-lyon.fr/live_proxy"></embed>
                    </audio>
                </p>
            </div>
            <aside>
                Si le lecteur ne s'affiche pas : <a href="http://gatsun-server.insa-lyon.fr/live_proxy">Lien
                    direct</a>
            </aside>
        </div>
    </section>
    <section>
        <h3>Commentaires</h3>

        <div class="card-panel">
            {% if app.user == null %}
                <p><em class="avertissement">Inscrivez-vous ou connectez-vous pour publier des commentaires !</em></p>
            {% else %}
                <form action="" method="post" id="texteCommentaire">
                    {# Boutons BBCode #}

                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat" onClick="bbcode('[b]', '[/b]');return(false)">
                            <i class="material-icons">format_bold</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat" onClick="bbcode('[i]', '[/i]');return(false)">
                            <i class="material-icons">format_italic</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat" onClick="bbcode('[u]', '[/u]');return(false)">
                            <i class="material-icons">format_underlined</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat" onClick="bbcode('[s]', '[/s]');return(false)">
                            <i class="material-icons">format_strikethrough</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[left]', '[/left]');return(false)">
                            <i class="material-icons">format_align_left</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[center]', '[/center]');return(false)">
                            <i class="material-icons">format_align_center</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[right]', '[/right]');return(false)">
                            <i class="material-icons">format_align_right</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[justified]', '[/justified]');return(false)">
                            <i class="material-icons">format_align_justify</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[list][*]', '\n[/list]');return(false)">
                            <i class="material-icons">format_list_bulleted</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[list=1][*]', '\n[/list]');return(false)">
                            <i class="material-icons">format_list_numbered</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat" onClick="bbcode('[hr]', '');return(false)">
                            <i class="material-icons">remove</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[quote=Auteur]', '[/quote]');return(false)">
                            <i class="material-icons">format_quote</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[table][tr][td]', '[/td][/tr][/table]');return(false)">
                            <i class="material-icons">grid_on</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[img]', '[/img]');return(false)">
                            <i class="material-icons">insert_photo</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[url=http://url/]', '[/url]');return(false)">
                            <i class="material-icons">insert_link</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[video]', '[/video]');return(false)">
                            <i class="material-icons">movie_creation</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[size=Valeurpx]', '[/size]');return(false)">
                            <i class="material-icons">format_size</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[color=Nom]', '[/color]');return(false)">
                            <i class="material-icons">format_color_text</i>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[font=Nom]', '[/font]');return(false)">
                            <i class="material-icons">font_download</i>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[sub]', '[/sub]');return(false)">
                            A<sub>x</sub>
                        </button>
                        <button class="waves-effect waves-teal btn-flat"
                                onClick="bbcode('[sup]', '[/sup]');return(false)">
                            A<sup>x</sup>
                        </button>
                    </div>
                    <div class="inline-block">
                        <button class="waves-effect waves-teal btn-flat"
                                onClick='window.open("{{ path('gatsun_website_aide_bbcode') }}","","width=720,height=400");'>
                            <i class="material-icons">help_outline</i>
                        </button>
                    </div>


                    <div class="input-field">
                        <textarea id="texte" class="materialize-textarea" required="required"></textarea>
                        <label for="texte">Commentaire</label>
                        <button class="btn waves-effect waves-light" onClick="commenter()"
                                id="boutonCommenter">
                            Envoyer
                            <i class="material-icons right">send</i>
                        </button>
                    </div>
                </form>
            {% endif %}
        </div>
        <div id="commentaires">
            {{ render(controller('GatsunWebsiteBundle:Ajax:rafraichirCommentaires', { 'page': 'live' })) }}
        </div>
    </section>
{% endblock %}
{% block javascripts %}
    <script type="text/javascript">
        function rafraichirLecteur() {
            $.ajax({
                url: "{{ path('gatsun_website_live_infos') }}",
                method: "GET",
                dataType: "json",
                cache: false
            }).done(function (json) {
                if (json != null) {
                    // Il y a une émission actuellement, afficher les infos
                    var heureDebut = new Date(json.heure_debut).getHours();
                    var minutesDebut = new Date(json.heure_debut).getMinutes();
                    if (minutesDebut < 10) minutesDebut = "0" + minutesDebut;
                    var heureFin = new Date(json.heure_fin).getHours();
                    var minutesFin = new Date(json.heure_fin).getMinutes();
                    if (minutesFin < 10) minutesFin = "0" + minutesFin;
                    $('#infosPlayer').html(heureDebut + 'h' + minutesDebut + " &rarr; " + heureFin + 'h' + minutesFin + " : <strong>" + json.nom + "</strong><br />" + json.description);
                    if (json.vignette != "") {
                        $('#imagePlayer').find('img').attr('src', json.vignette);
                    } else {
                        $('#imagePlayer').find('img').attr('src', "{{ asset('images/header.png') }}");
                    }

                    // Rafraîchisement du lecteur à la fin de l'émission
                    var heureCourante = new Date().getHours();
                    var minutesCourantes = new Date().getMinutes();
                    var secondesCourantes = new Date().getSeconds();

                    var timestampFin = heureFin * 3600000 + (minutesFin + 1) * 60000;
                    var timestampCourant = heureCourante * 3600000 + minutesCourantes * 60000 + secondesCourantes * 1000;
                    setTimeout(rafraichirLecteur, timestampFin - timestampCourant);
                } else {
                    // Pas d'émission, c'est la playlist !
                    $('#infosPlayer').html("<strong> La playlist Gatsun </strong><br />En attendant les émissions !");
                    $('#imagePlayer').find('img').attr('src', "{{ asset('images/header.png') }}");

                    // Rafraîchissement du lecteur dans 30 secondes
                    setTimeout(rafraichirLecteur, 30000);
                }
            });
        }

        function rafraichirCommentaires() {
            $.ajax({
                url: "{{ path('gatsun_website_ajax_commentaires_rafraichir', { 'page': 'live' }) }}",
                method: "GET",
                cache: false
            }).done(function (response) {
                var html = $.parseHTML(response);
                var commentaires = $("#commentaires");
                if (html.length != $.parseHTML(commentaires.html()).length) {
                    var tooltiped =  $('.tooltipped');
                    // Désactiver le tooltip des boutons des commentaires
                    tooltiped.tooltip('remove');

                    // Mise à jour visuelle des commentaires
                    commentaires.html(html);

                    // Réactivation des tooltips des commentaires
                    tooltiped.tooltip({delay: 50});
                }

                setTimeout(rafraichirCommentaires, 5000);
            });
        }

        function commenter() {
            var texte = $('#texte');
            var boutonCommenter = $("#boutonCommenter");

            texte.attr('disabled', 'disabled');
            boutonCommenter.attr('disabled', 'disabled');

            $.ajax({
                url: "{{ path('gatsun_website_ajax_commentaires_ajouter') }}",
                method: "POST",
                data: {texte: texte.val(), page: 'live'}
            }).done(function () {
                rafraichirCommentaires();
                texte.val('');
                texte.removeAttr('disabled');
                boutonCommenter.removeAttr('disabled');
            });
        }

        function moderer(id) {
            // Popup de confirmation
            if (confirm('Êtes-vous sur de vouloir modérer ce commentaire ?')) {
                // Requête AJAX
                $.ajax({
                            url: "{{ path('gatsun_website_ajax_commentaires_moderer') }}?id=" + id + "&page=live",
                            dataType: 'html',
                            cache: false
                        })
                        .done(function () {
                            // Rafraichissement des commentaires avec les nouvelles modifications
                            rafraichirCommentaires();

                            // Message : Succès !
                            Materialize.toast('Commentaire modéré avec succès', 4000, 'green');
                        })
                        .fail(function () {
                            // Message : Erreur !
                            Materialize.toast('Erreur lors de la modération du commentaire', 10000, 'red');
                        });
            }
        }

        function supprimer(id) {
            // Popup de confirmation
            if (confirm('Êtes-vous sur de vouloir supprimer votre commentaire ?')) {
                // Requête AJAX
                $.ajax({
                            url: "{{ path('gatsun_website_ajax_commentaires_supprimer') }}?id=" + id + "&page=live",
                            dataType: 'html',
                            cache: false
                        })
                        .done(function () {
                            // Rafraichissement des commentaires avec les nouvelles modifications
                            rafraichirCommentaires();

                            // Message : Succès !
                            Materialize.toast('Commentaire supprimé avec succès', 4000, 'green');
                        })
                        .fail(function () {
                            // Message : Erreur !
                            Materialize.toast('Erreur lors de la suppression du commentaire', 10000, 'red');
                        });
            }
        }

        /*** BBCODE ***/
        function bbcode(bbdebut, bbfin) {
            var input = document.getElementById("texte");
            input.focus();
            if (typeof document.selection != "undefined") {
                var range = document.selection.createRange();
                var insText = range.text;
                range.text = bbdebut + insText + bbfin;
                range = document.selection.createRange();
                if (insText.length == 0) {
                    range.move("character", -bbfin.length);
                }
                else {
                    range.moveStart("character", bbdebut.length + insText.length + bbfin.length);
                }
                range.select();
            }
            else if (typeof input.selectionStart != "undefined") {
                var start = input.selectionStart;
                var end = input.selectionEnd;
                var insText = input.value.substring(start, end);
                input.value = input.value.substr(0, start) + bbdebut + insText + bbfin + input.value.substr(end);
                var pos;
                if (insText.length == 0) {
                    pos = start + bbdebut.length;
                }
                else {
                    pos = start + bbdebut.length + insText.length + bbfin.length;
                }
                input.selectionStart = pos;
                input.selectionEnd = pos;
            }
            else {
                var pos;
                var re = new RegExp("^[0-9]{0,3}$");
                while (!re.test(pos)) {
                    pos = prompt("insertion (0.." + input.value.length + "):", "0");
                }
                if (pos > input.value.length) {
                    pos = input.value.length;
                }
                var insText = prompt("Veuillez taper le texte");
                input.value = input.value.substr(0, pos) + bbdebut + insText + bbfin + input.value.substr(pos);
            }
        }

        $(document).ready(function () {
            /*** Gestion de la touche entrée ***/
            $("#texte").keypress(event, function () {
                e = event || window.event;
                var k = e.keyCode || e.which || e.charCode;
                if (k == 13 && !e.shiftKey) {
                    e.preventDefault();
                    commenter();
                    return false;
                }
                return true;
            });

            // Lancement du rafraichissement des commentaires et du lecteur
            rafraichirCommentaires();
            rafraichirLecteur();
        });
    </script>
{% endblock %}
{% block stylesheets %}
    <link rel="stylesheet" media="screen" type="text/css" href="{{ asset('css/live.css') }}"/>
{% endblock %}